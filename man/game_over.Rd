% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/game_over.R
\name{game_over}
\alias{game_over}
\alias{restart}
\title{Quit or Restart a Scene Render}
\usage{
game_over(...)

restart(...)
}
\arguments{
\item{...}{passed to \code{\link[=cat]{cat()}}}
}
\value{
For \code{game_over()}, 0.

For \code{restart()}, 1.
}
\description{
Functions to be called within behaviours to quit or restart \code{\link[=see]{see()}}.
}
\details{
A behaviour that returns the result of \code{game_over()} or \code{restart()} instead
of the updated element causes \code{\link[=see]{see()}} to quit the graphics device or return
the scene to its original value respectively when it is applied.
}
\examples{
count_to_fifty <- function(element, ...){
  initial(element$counter) <- 0
  print(element$counter)
  if(element$counter == 50) return(game_over("Fifty reached"))
  element$counter <- element$counter + 1
  element
}

cam <- behave(camera(), count_to_fifty)
scene <- scene(cam)
\dontrun{
see(scene)
}

restart_if_forty <- function(element, ...){
  if(element$counter == 40) return(restart("Forty reached\n"))
  element
}

restarting_cam <- behave(cam, restart_if_forty)
restarting_scene <- scene(restarting_cam)
\dontrun{
# Remember that pressing "Q" quits the device
see(restarting_scene)
}
}
\seealso{
\code{\link[=behave]{behave()}}, \code{\link[=spin]{spin()}}.
}
