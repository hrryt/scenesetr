% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initial.R
\name{initial<-}
\alias{initial<-}
\title{Storing Variables between Frames}
\usage{
initial(x) <- value
}
\arguments{
\item{x}{a new element of a list. A new variable appended to a scene element.}

\item{value}{any R object}
}
\value{
The updated list. (Note that the value of
\code{initial(x) <- value} is that of the assignment, \code{value}, not the return
value from the left-hand side.)
}
\description{
Set the initial value of a variable stored within a scene element
between frames.
}
\details{
\code{initial(x) <- value} assigns a value to an element of a list
if it has not yet been set (if \code{is.null(x)} is \code{TRUE}).

Scene elements are stored as lists and so user-defined variables can be
appended to them using \verb{$<-} and accessed using \code{$}.

\code{initial(element$new_variable) <- value} can be useful in setting the
\code{value} of a \code{new_variable} at frame zero in the behaviour of an \code{element}.
The new variable can then be accessed in the current and subsequent frames
using \code{element$new_variable}.

\verb{initial<-} is currently defined as
\code{function(x, value) if(is.null(x)) value else x}
}
\examples{
count_to_fifty <- function(element, ...){
  initial(element$counter) <- 0
  print(element$counter)
  if(element$counter == 50) return(game_over("Fifty reached"))
  element$counter <- element$counter + 1
  element
}

cam <- behave(camera(), count_to_fifty)
scene <- scene(cam)
\dontrun{
see(scene)
}

}
